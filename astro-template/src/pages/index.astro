---
// src/pages/index.astro
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Timothy Chin | Software Engineer</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <!-- Add progress bar indicator -->
  <style>
    /* Progress Indicator */
    .scroll-progress-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 4px;
      background-color: transparent;
      z-index: 2000;
    }
    
    .scroll-progress-bar {
      height: 100%;
      width: 0;
      background-color: var(--primary-color);
      transition: width 0.2s ease;
    }
    
    /* Global Styles */
    :root {
      --primary-color: #4a6cf7;
      --secondary-color: #2c3e50;
      --text-color: #333;
      --light-bg: #f9fafb;
      --dark-bg: #1e293b;
      --card-bg: #ffffff;
      --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      --animation-duration: 0.7s;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Inter', 'Segoe UI', system-ui, sans-serif;
    }
    
    body {
      color: var(--text-color);
      line-height: 1.7;
      overflow-x: hidden;
    }
    
    section {
      min-height: 100vh;
      padding: 6rem 2rem;
      scroll-margin-top: 80px;
      position: relative;
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
    }
    
    /* Animation Classes */
    .animate-on-scroll {
      opacity: 0;
      transform: translateY(30px);
      transition: opacity var(--animation-duration) ease, 
                  transform var(--animation-duration) ease;
    }
    
    .animate-on-scroll.animated {
      opacity: 1;
      transform: translateY(0);
    }
    
    .stagger-animation > * {
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.5s ease, transform 0.5s ease;
    }
    
    .stagger-animation.animated > *:nth-child(1) { transition-delay: 0.1s; }
    .stagger-animation.animated > *:nth-child(2) { transition-delay: 0.2s; }
    .stagger-animation.animated > *:nth-child(3) { transition-delay: 0.3s; }
    .stagger-animation.animated > *:nth-child(4) { transition-delay: 0.4s; }
    .stagger-animation.animated > *:nth-child(5) { transition-delay: 0.5s; }
    
    .stagger-animation.animated > * {
      opacity: 1;
      transform: translateY(0);
    }
    
    /* Navigation */
    header {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      background-color: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(10px);
      box-shadow: var(--shadow);
      z-index: 1000;
      animation: slideDown 0.5s ease forwards;
    }
    
    @keyframes slideDown {
      0% {
        transform: translateY(-100%);
        opacity: 0;
      }
      100% {
        transform: translateY(0);
        opacity: 1;
      }
    }
    
    nav {
      display: flex;
      justify-content: space-between;
      align-items: center;
      max-width: 1200px;
      margin: 0 auto;
      padding: 1rem 2rem;
    }
    
    .logo {
      font-weight: 700;
      font-size: 1.5rem;
      color: var(--primary-color);
      text-decoration: none;
      position: relative;
      overflow: hidden;
    }
    
    .logo::before {
      content: '';
      position: absolute;
      bottom: 0;
      left: -100%;
      width: 100%;
      height: 2px;
      background-color: var(--primary-color);
      transition: left 0.3s ease;
    }
    
    .logo:hover::before {
      left: 0;
    }
    
    .nav-links {
      display: flex;
      gap: 2rem;
    }
    
    .nav-links a {
      text-decoration: none;
      color: var(--secondary-color);
      font-weight: 500;
      position: relative;
      padding: 5px 0;
      transition: color 0.3s ease;
    }
    
    .nav-links a.active {
      color: var(--primary-color);
    }
    
    .nav-links a::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 0;
      height: 2px;
      background-color: var(--primary-color);
      transition: width 0.3s ease;
    }
    
    .nav-links a:hover::after,
    .nav-links a.active::after {
      width: 100%;
    }
    
    .nav-links a:hover {
      color: var(--primary-color);
    }
    
    .mobile-menu-btn {
      display: none;
      background: none;
      border: none;
      font-size: 1.5rem;
      cursor: pointer;
      color: var(--secondary-color);
    }
    
    /* Hero Section */
    #home {
      display: flex;
      align-items: center;
      background: linear-gradient(to right, #f9fafb, #eef2ff);
    }
    
    .hero-content {
      display: flex;
      align-items: center;
      gap: 4rem;
    }
    
    .hero-text {
      flex: 1;
    }
    
    .hero-text h1 {
      font-size: 3rem;
      font-weight: 800;
      margin-bottom: 1rem;
      color: var(--secondary-color);
      position: relative;
      display: inline-block;
    }
    
    .hero-text h1::after {
      content: '';
      position: absolute;
      bottom: -5px;
      left: 0;
      width: 0;
      height: 3px;
      background-color: var(--primary-color);
      transition: width 1s ease;
    }
    
    .animate-on-scroll.animated .hero-text h1::after {
      width: 100%;
    }
    
    .hero-text h2 {
      font-size: 1.5rem;
      font-weight: 500;
      color: var(--primary-color);
      margin-bottom: 1.5rem;
      opacity: 0;
      transform: translateX(-20px);
      transition: opacity 0.5s ease 0.3s, transform 0.5s ease 0.3s;
    }
    
    .animate-on-scroll.animated .hero-text h2 {
      opacity: 1;
      transform: translateX(0);
    }
    
    .hero-text p {
      font-size: 1.1rem;
      margin-bottom: 2rem;
      max-width: 550px;
      color: #4b5563;
    }
    
    .profile-image {
      flex: 0 0 300px;
      overflow: hidden;
      border-radius: 50%;
      box-shadow: var(--shadow);
    }
    
    .profile-image img {
      width: 100%;
      height: auto;
      display: block;
      object-fit: cover;
    }
    
    /* Work Section */
    #work {
      background-color: var(--light-bg);
    }
    
    .section-title {
      font-size: 2.25rem;
      font-weight: 700;
      margin-bottom: 3rem;
      text-align: center;
      color: var(--secondary-color);
    }
    
    .work-cards {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 2rem;
    }
    
    .card {
      background-color: var(--card-bg);
      border-radius: 12px;
      box-shadow: var(--shadow);
      overflow: hidden;
      transition: transform 0.4s ease-out, 
                  box-shadow 0.4s ease-out,
                  opacity 0.3s ease;
      backface-visibility: hidden;
      position: relative;
    }
    
    .card:hover {
      transform: translateY(-8px) scale(1.01);
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
    }
    
    .card::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.2), transparent);
      opacity: 0;
      transition: opacity 0.4s ease;
      pointer-events: none;
    }
    
    .card:hover::after {
      opacity: 1;
    }
    
    .card-image {
      height: 180px;
      overflow: hidden;
    }
    
    .card-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .card-content {
      padding: 1.5rem;
    }
    
    .card-title {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.75rem;
      color: var(--secondary-color);
    }
    
    .card-description {
      font-size: 0.95rem;
      margin-bottom: 1.5rem;
      color: #4b5563;
    }
    
    .card-tags {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-top: 1rem;
    }
    
    .tag {
      font-size: 0.75rem;
      padding: 0.25rem 0.75rem;
      border-radius: 20px;
      background-color: #eff6ff;
      color: var(--primary-color);
      font-weight: 500;
    }
    
    /* Contact Section */
    #contact {
      background-color: var(--secondary-color);
      color: white;
    }
    
    .contact-section-title {
      font-size: 2.25rem;
      font-weight: 700;
      margin-bottom: 3rem;
      text-align: center;
      color: white;
    }
    
    .contact-content {
      max-width: 700px;
      margin: 0 auto;
      text-align: center;
    }
    
    .contact-text {
      font-size: 1.1rem;
      margin-bottom: 2.5rem;
      color: #e2e8f0;
    }
    
    .contact-links {
      display: flex;
      justify-content: center;
      gap: 2rem;
      margin-top: 2rem;
    }
    
    .contact-links a {
      display: flex;
      flex-direction: column;
      align-items: center;
      text-decoration: none;
      color: white;
      transition: transform 0.3s ease;
    }
    
    .contact-links a:hover {
      transform: scale(1.1) translateY(-5px);
      color: var(--primary-color);
    }
    
    .contact-links a:hover i {
      animation: pulse 1.5s infinite;
    }
    
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.1); }
      100% { transform: scale(1); }
    }
    
    .contact-links i {
      font-size: 2rem;
      margin-bottom: 0.5rem;
    }
    
    .contact-links span {
      font-size: 0.9rem;
    }
    
    /* Footer */
    footer {
      background-color: #1a202c;
      color: #a0aec0;
      text-align: center;
      padding: 2rem;
      font-size: 0.875rem;
    }
    
    /* Mobile Responsiveness */
    @media (max-width: 768px) {
      .hero-content {
        flex-direction: column-reverse;
        text-align: center;
        gap: 2rem;
      }
      
      .profile-image {
        flex: 0 0 200px;
      }
      
      .section-title, .contact-section-title {
        font-size: 1.75rem;
      }
      
      .nav-links {
        position: fixed;
        top: 80px;
        right: -100%;
        flex-direction: column;
        background-color: white;
        width: 100%;
        text-align: center;
        padding: 2rem;
        box-shadow: var(--shadow);
        transition: right 0.3s ease;
      }
      
      .nav-links.active {
        right: 0;
      }
      
      .mobile-menu-btn {
        display: block;
      }
      
      .contact-links {
        flex-wrap: wrap;
        gap: 1.5rem;
      }
    }
  </style>
</head>
<body>
  <!-- Header Navigation -->
  <header>
    <nav>
      <a href="#home" class="logo">TC</a>
      <div class="nav-links" id="navLinks">
        <a href="#home" class="active">Home</a>
        <a href="#work">Work</a>
        <a href="#contact">Contact</a>
      </div>
      <button class="mobile-menu-btn" id="mobileMenuBtn">
        <i class="fas fa-bars"></i>
      </button>
    </nav>
  </header>
  
  <!-- Scroll Progress Indicator -->
  <div class="scroll-progress-container">
    <div id="scrollProgress" class="scroll-progress-bar"></div>
  </div>

  <!-- Hero Section -->
  <section id="home">
    <div class="container">
      <div class="hero-content animate-on-scroll">
        <div class="hero-text">
          <h1>TIMOTHY CHIN</h1>
          <h2>Software Engineer</h2>
          <p>
            Passionate software engineer with expertise in building robust and scalable web applications.
            Focused on delivering clean, efficient code and exceptional user experiences.
          </p>
        </div>
        <div class="profile-image">
          <img src="/api/placeholder/400/400" alt="Timothy Chin">
        </div>
      </div>
    </div>
  </section>

  <!-- Work Section -->
  <section id="work">
    <div class="container">
      <h2 class="section-title animate-on-scroll">My Work</h2>
      <div class="work-cards stagger-animation">
        <!-- Project Card 1 -->
        <div class="card">
          <div class="card-image">
            <img src="/api/placeholder/400/240" alt="E-commerce Platform">
          </div>
          <div class="card-content">
            <h3 class="card-title">E-commerce Platform</h3>
            <p class="card-description">
              A full-featured e-commerce platform with product catalog, shopping cart, and secure payment processing.
            </p>
            <div class="card-tags">
              <span class="tag">React</span>
              <span class="tag">Node.js</span>
              <span class="tag">MongoDB</span>
              <span class="tag">GraphQL</span>
            </div>
          </div>
        </div>
        
        <!-- Project Card 2 -->
        <div class="card">
          <div class="card-image">
            <img src="/api/placeholder/400/240" alt="Task Management App">
          </div>
          <div class="card-content">
            <h3 class="card-title">Task Management App</h3>
            <p class="card-description">
              Collaborative task management application with real-time updates, task assignment, and progress tracking.
            </p>
            <div class="card-tags">
              <span class="tag">Vue.js</span>
              <span class="tag">Firebase</span>
              <span class="tag">Tailwind CSS</span>
            </div>
          </div>
        </div>
        
        <!-- Project Card 3 -->
        <div class="card">
          <div class="card-image">
            <img src="/api/placeholder/400/240" alt="Data Visualization Dashboard">
          </div>
          <div class="card-content">
            <h3 class="card-title">Data Visualization Dashboard</h3>
            <p class="card-description">
              Interactive dashboard for visualizing complex datasets with customizable charts and filtering options.
            </p>
            <div class="card-tags">
              <span class="tag">TypeScript</span>
              <span class="tag">D3.js</span>
              <span class="tag">Express</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Contact Section -->
  <section id="contact">
    <div class="container">
      <h2 class="contact-section-title animate-on-scroll">Get in Touch</h2>
      <div class="contact-content animate-on-scroll">
        <p class="contact-text">
          Interested in working together or have a project in mind? Feel free to reach out!
        </p>
        <div class="contact-links stagger-animation">
          <a href="tel:+1234567890">
            <i class="fas fa-phone"></i>
            <span>Phone</span>
          </a>
          <a href="mailto:timothy.chin@example.com">
            <i class="fas fa-envelope"></i>
            <span>Email</span>
          </a>
          <a href="https://github.com/timothychin" target="_blank">
            <i class="fab fa-github"></i>
            <span>GitHub</span>
          </a>
          <a href="https://linkedin.com/in/timothychin" target="_blank">
            <i class="fab fa-linkedin"></i>
            <span>LinkedIn</span>
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Footer -->
  <footer>
    <p>&copy; 2025 Timothy Chin. All Rights Reserved.</p>
  </footer>

  <script>
    // Mobile Menu Toggle
    const mobileMenuBtn = document.getElementById('mobileMenuBtn');
    const navLinks = document.getElementById('navLinks');
    
    mobileMenuBtn.addEventListener('click', () => {
      navLinks.classList.toggle('active');
      const icon = mobileMenuBtn.querySelector('i');
      if (navLinks.classList.contains('active')) {
        icon.classList.remove('fa-bars');
        icon.classList.add('fa-times');
      } else {
        icon.classList.remove('fa-times');
        icon.classList.add('fa-bars');
      }
    });
    
    // Smooth Scroll Animation for Navigation Links
    document.addEventListener('DOMContentLoaded', () => {
      const navLinks = document.querySelectorAll('nav a');
      
      navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          
          // Get the target section
          const targetId = this.getAttribute('href');
          const targetSection = document.querySelector(targetId);
          
          if (targetSection) {
            // Get the current active link and remove active class
            const currentActive = document.querySelector('nav a.active');
            if (currentActive) {
              currentActive.classList.remove('active');
            }
            
            // Add active class to clicked link
            this.classList.add('active');
            
            // Get the mobile menu button and icon
            const mobileMenuBtn = document.getElementById('mobileMenuBtn');
            const navLinks = document.getElementById('navLinks');
            
            // Close mobile menu if open
            if (navLinks.classList.contains('active')) {
              navLinks.classList.remove('active');
              const icon = mobileMenuBtn.querySelector('i');
              icon.classList.remove('fa-times');
              icon.classList.add('fa-bars');
            }
            
            // Calculate the offset position
            const headerHeight = document.querySelector('header').offsetHeight;
            const targetPosition = targetSection.getBoundingClientRect().top + window.pageYOffset - headerHeight;
            
            // Scroll to the target section with smooth animation
            window.scrollTo({
              top: targetPosition,
              behavior: 'smooth'
            });
            
            // Update URL hash without scrolling
            history.pushState(null, null, targetId);
          }
        });
      });
    });
    
    // Scroll Animation for Content
    document.addEventListener('DOMContentLoaded', () => {
      const animateElements = document.querySelectorAll('.animate-on-scroll');
      const staggerAnimations = document.querySelectorAll('.stagger-animation');
      
      // Initial check for elements that are already in view on page load
      checkScroll();
      
      // Check elements on scroll
      window.addEventListener('scroll', () => {
        checkScroll();
        updateActiveNavLink();
      });
      
      function checkScroll() {
        // For single elements with fade up animation
        animateElements.forEach(element => {
          const elementTop = element.getBoundingClientRect().top;
          const windowHeight = window.innerHeight;
          const revealPoint = 150;
          
          if (elementTop < windowHeight - revealPoint) {
            element.classList.add('animated');
          }
        });
        
        // For staggered animations (cards and icons)
        staggerAnimations.forEach(container => {
          const containerTop = container.getBoundingClientRect().top;
          const windowHeight = window.innerHeight;
          const revealPoint = 150;
          
          if (containerTop < windowHeight - revealPoint) {
            container.classList.add('animated');
          }
        });
      }
      
      // Update scroll progress bar
      const scrollProgressBar = document.getElementById('scrollProgress');
      function updateScrollProgress() {
        const scrollTop = window.scrollY;
        const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;
        const scrollPercentage = (scrollTop / scrollHeight) * 100;
        scrollProgressBar.style.width = scrollPercentage + '%';
      }
      
      // Update scroll progress on scroll
      window.addEventListener('scroll', updateScrollProgress);
      
      // Initial update of scroll progress
      updateScrollProgress();
      
      // Function to update active nav link based on scroll position
      function updateActiveNavLink() {
        const sections = document.querySelectorAll('section');
        const navLinks = document.querySelectorAll('nav a');
        
        let currentSection = '';
        
        sections.forEach(section => {
          const sectionTop = section.offsetTop;
          const sectionHeight = section.clientHeight;
          const headerHeight = document.querySelector('header').offsetHeight;
          
          if (window.pageYOffset >= sectionTop - headerHeight - 100) {
            currentSection = section.getAttribute('id');
          }
        });
        
        navLinks.forEach(link => {
          link.classList.remove('active');
          if (link.getAttribute('href') === `#${currentSection}`) {
            link.classList.add('active');
          }
        });
      }
    });
  </script>
</body>
</html>